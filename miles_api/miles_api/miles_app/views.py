from django.shortcuts import render
from rest_framework import viewsets, status 
from rest_framework.decorators import action 
from rest_framework.response import Response
from .models import Miles 
from .serializers import MilesSerializer


class MilesViewSet(viewsets.ModelViewSet):

    # Default insert, update, deleet methods are generated by django_rest_framwork
    
    queryset = Miles.objects.all().order_by('vehicle')
    serializer_class = MilesSerializer


    # Custom method for increasing miles for vehicle
    @action(detail=True, methods=['patch'])
    def increase_miles(self, request, pk=None):
        new_miles = float(request.data['new_miles'])
        vehicle = self.get_object()
        vehicle.total_miles = vehicle.total_miles + new_miles
        vehicle.save()
        return Response(self.get_serializer(vehicle, many=False).data)

        